function Permission(attributes) {
	HtkModel.call(this, attributes);
}

Permission.prototype = Object.create(HtkModel.prototype, {
	api_url : {	value : function() { return "/api/v1/deliverables/" + this.deliverable_id + "/permissions"; } },
	type_key : { value : "permission" },
	attribute_keys : { value : <%= Permission.columns.map(&:name).to_json %> },
	registry_hook : { 
		value : function() {
			this.getUser();
		}
	},
	getUser : {
		value : function() {
			if (!this.user) {
				this.user = User.prototype.find_cached(this.user_id);				
			}
			return this.user;
		}
	}
});

<% DeliverableAccess.all.each do |access_type| %>
Permission.prototype.<%= access_type.cmethod %>_access = "<%= access_type.id %>";
Permission.prototype.has_<%= access_type.cmethod %>_access = function() {
	return this.access_id == <%= access_type.id %>;
}
<% end %>

Permission.prototype.isShown = function() {
	return this.visibility_id == <%= DeliverableVisibility.shown.id %>;	
}

Permission.prototype.toggleVisibility = function() {
	if (this.visibility_id == <%= DeliverableVisibility.shown.id %>) {
		this.set("visibility_id", <%= DeliverableVisibility.hidden.id %>);
	} else {
		this.set("visibility_id", <%= DeliverableVisibility.shown.id %>);
	}
}