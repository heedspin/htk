function htkRequest(method, path, data, callback) {
  var request_data = null;
  if (!data) {
    request_data = new Object();
  } else if (data instanceof Array) {
    request_data = new Object();
    for (var index in data) {
      for (var key in data[index]) {
        var value = data[index][key];
        var exists = request_data[key];
        if (exists) {
          if (exists instanceof Array) {
            exists.push(value);
          } else {
            request_data[key] = [exists, value];
          }
        } else {
          request_data[key] = value
        }
      }
    }   
  } else {
    request_data = data
  }
  var csrf_token = $('meta[name="csrf-token"]');
  if (csrf_token) {
    request_data["csrf-token"] = csrf_token.attr("content");
  }
  return htkAjax(method, path, request_data, callback);
}
var htkKeyMap = {
  "message_id": "web_id",
  "sender_email": "from_address",
  "date_sent": "date",
  "recipient_to_email": "to_addresses",
  "recipient_cc_email": "cc_addresses"
}
function htkGetContentMatches(keys) {
  var matches = getContentMatches();
  var result = [];
  for (var match in matches) {
    for (var key in matches[match]) {
      if ((keys == null) || ($.inArray(key, keys) >= 0)) {
        var obj = new Object();
        obj[htkKeyMap[key] || key] = matches[match][key];
        result.push(obj);
      }
    }
  }
  return result;
}