function Deliverable(attributes) {
	HtkModel.call(this, attributes);
	this.owner = null;
	this.responsible_users = [];
	this.tree = null;
	this.parent_relation = null;
	this.company_relation = null;
}

Deliverable.prototype = Object.create(HtkModel.prototype, {
	api_url : {	value : function(){ return "/api/v1/deliverables"; } },
	type_key : { value : "deliverable" },
	attribute_keys : { value : <%= (Deliverable.columns.map(&:name) + ['deliverable_type_id', 'email_id']).to_json %> },
	// write_attribute : {
	// 	value : function(key, value) {
	// 		HtkModel.prototype.write_attribute.apply(this, [key, value]);
	// 		if (key == 'title') {
	// 		  $("#htk-dlist").find("li[data-id=" + this.id + "] span.htk-title").html(this.title);
	// 		}
	// 	}
	// },
	isCompleted : {
		value : function() {
			return this.completed_by_id != null;
		}
	},
	registry_hook : {
		value : function() {
			var _this = this;
			this.responsible_users = [];
			_.each(DeliverableUser.prototype.all_cached({ deliverable_id : this.id }), function(du) {
				if (du.access == "owner") {
					_this.owner = du.user;
				}
				if (du.responsible) {
					_this.responsible_users.push(du);
				}
			});
			_.each(DeliverableRelation.prototype.all_cached({ target_deliverable_id : this.id }), function(relation) {
				if (relation.is_parent())
					_this.parent_relation = relation;
				else if (relation.is_company())
					_this.company_relation = relation;
			});
			this.deliverable_type = DeliverableType.prototype.find_cached(this.deliverable_type_id);
		}
	}
});

Deliverable.prototype.getParent = function() {
	if (this.parent_relation && this.parent_relation.source_deliverable_id) {
		return Deliverable.prototype.find_cached(this.parent_relation.source_deliverable_id)
		// return this.tree.getDeliverable(this.parent_relation.source_deliverable_id);
	} else {
		return null;
	}
}

Deliverable.prototype.recent = function(query_data, callbacks) {
	var _this = this;
	htkRequest("GET", this.api_url() + "/recent", query_data, function(obj) {
		var results = _this.extract(obj);
		_this.handle_callbacks(results, callbacks);
	});
}

Deliverable.prototype.bindComments = function(router, container) {
	var _this = this;
	DeliverableComment.prototype.all(this.id, {
		success : function(results) {
			_.each(results.comments, function(comment) {
				var controller = router.getCommentsController(comment);
				if (controller) {
					controller.showComment(_this, container, comment);					
				}
			});
		}
	});
}

Deliverable.prototype.canHaveCompanies = function() {
	// TODO: Move this to deliverable type: Only projects can do this.
	return this.parent_relation.source_deliverable_id == null;
}