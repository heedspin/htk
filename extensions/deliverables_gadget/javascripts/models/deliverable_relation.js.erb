function DeliverableRelation(attributes, deliverables) {
	HtkModel.call(this, attributes);
	// this.source_deliverable = null;
	// this.target_deliverable = null;
}

DeliverableRelation.prototype = Object.create(HtkModel.prototype, {
	api_url : {	
		value : function() { return "/api/v1/deliverable_relations"; }
	},
	type_key : { value : "deliverable_relation" },
	attribute_keys : { value : <%= DeliverableRelation.columns.map(&:name).to_json %> }
});

DeliverableRelation.prototype.parent_relation_type = "<%= DeliverableRelationType.parent.id %>";

// DeliverableRelation.prototype.set_deliverables = function(deliverables) {
// 	var _this = this;
// 	this.source_deliverable = _.find(deliverables, function(d) { return d.id == _this.source_deliverable_id; });
// 	this.target_deliverable = _.find(deliverables, function(d) { return d.id == _this.target_deliverable_id; });
// }

// DeliverableRelation.prototype.setParentId = function(parent_id) {
// 	this.source_deliverable_id = parent_id;
// }

DeliverableRelation.prototype.find_cached_parent = function(deliverable) {
	var cached = HtkObjectCache.prototype.types[DeliverableRelation.prototype.type_key];
	for (var property in cached) {
		var relation = cached[property];
		if (relation && relation.target_deliverable_id == deliverable.id && relation.relation_type == DeliverableRelation.prototype.parent_relation_type)
			return relation;
	}
}